apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch-service
spec:
  ports:
  - name: "9200"
    port: 9200
    targetPort: 9200
  type: NodePort
  selector:
    io.kompose.service: elasticsearch
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      name: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name : elasticsearch
        io.kompose.service: elasticsearch
    spec:
      securityContext:
        runAsUser: 2000
      containers:
      - env:
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        - name: discovery.type
          value: single-node
        - name: node.name
          value: es01
        - name: xpack.security.enabled
          value: "false"
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
        name: elasticsearch
        ports:
        - containerPort: 9200
        resources: {}
        #command:
        #- mkdir
        #- /test
        volumeMounts:
        - mountPath: /test
          name: esdata
        #command:
        #- chown
        #- -R  
        #- 777:777
        #- /test
        #- /usr/share/elasticsearch/data
      securityContext:
        runAsUser: 2000
      restartPolicy: Always
      volumes:
      - name: esdata
        persistentVolumeClaim:
          claimName: esdata
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: esdata
  name: esdata
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}